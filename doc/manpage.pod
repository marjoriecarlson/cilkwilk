=encoding UTF-8

=head1 NAME

nonogram - nonogram solver

=head1 SYNOPSIS

B<nonogram> [-c | --color] [-u | --utf8]

B<nonogram> {-H | --html | -X | --xhtml}

B<nonogram> {-h | --help | -v | --version}

=head1 DESCRIPTION

B<nonogram> is a solver of nonogram puzzles
(also known as “griddler puzzles” or “paint by numbers”).

=head1 OPTIONS

=over

=item B<-c>, B<--colors>

If I<stdout> is a color terminal,
use colors.

This used to be the default in previous (<< 0.9) version of the program.

=item B<-u>, B<--utf-8>

If I<stdout> is not a terminal,
output UTF-8 drawing characters instead of plain ASCII.

=item B<-H>, B<--html>

Output an HTML document.

=item B<-X>, B<--xhtml>

Output an XHTML document.

=item B<-h>, B<--help>

Display help and exit.

=item B<-v>, B<--version>

Output version information and exit.

=back

=head1 DATA FORMAT

The program reads data from the standard input.
The data should be in the following format:

    W H
    L1B1 [L1B2 ...]
    L2B1 [L2B2 ...]
    ...
    C1B1 [C1B2 ...]
    C2B1 [C2B2 ...]

where:

=over

=item W

is width of the puzzle;

=item H

is height of the puzzle;

=item LI<y>BI<n>

is width of I<n>th block in line I<y>

=item CI<x>BI<n>

is width of I<n>th block in column I<x>

=back

=head1 EXAMPLE

    $ nonogram <<EOF
    6 3
    3 2
    1 2 1
    2 3
    3
    1 1
    2
    2
    1 1
    3
    EOF
            3 1 2 2 1 3
              1     1
          +------------+
     3 2  |######  ####|
     1 2 1|##  ####  ##|
     2 3  |####  ######|
          +------------+

=for comment
vim:ts=4 sts=4 sw=4 et
